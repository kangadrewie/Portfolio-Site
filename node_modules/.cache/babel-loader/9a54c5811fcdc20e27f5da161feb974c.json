{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/andrewgorman/Documents/Personal Website/site_1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\n\n/**\n *  base64.mjs\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n * \n * @author Dan Kogai (https://github.com/dankogai)\n */\nvar version = '3.2.3';\nvar _b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar _b64tab = function (bin) {\n  var tab = {},\n      i = 0;\n\n  var _iterator = _createForOfIteratorHelper(bin),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var c = _step.value;\n      tab[c] = i++;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return tab;\n}(_b64chars);\n\nvar _fromCharCode = String.fromCharCode;\n\nvar _mkUriSafe = function _mkUriSafe(src) {\n  return String(src).replace(/[+\\/]/g, function (m0) {\n    return m0 == '+' ? '-' : '_';\n  }).replace(/=/g, '');\n};\n/**\n * converts a Uint8Array to a Base64 string\n * @param {Uint8Array} src\n * @param {Boolean} urisafe URL-and-filename-safe a la RFC4648\n * @returns {String} Base64 string\n */\n\n\nvar fromUint8Array = function fromUint8Array(src, urisafe) {\n  var b64 = '';\n\n  for (var i = 0, l = src.length; i < l; i += 3) {\n    var a0 = src[i],\n        a1 = src[i + 1],\n        a2 = src[i + 2];\n    var ord = a0 << 16 | a1 << 8 | a2;\n    b64 += _b64chars.charAt(ord >>> 18) + _b64chars.charAt(ord >>> 12 & 63) + (typeof a1 != 'undefined' ? _b64chars.charAt(ord >>> 6 & 63) : '=') + (typeof a2 != 'undefined' ? _b64chars.charAt(ord & 63) : '=');\n  }\n\n  return urisafe ? _mkUriSafe(b64) : b64;\n};\n/**\n * 100% compatible with `window.btoa` of web browsers\n * @param {String} src binary string\n * @returns {String} Base64-encoded string\n */\n\n\nvar _btoa = typeof btoa === 'function' ? function (s) {\n  return btoa(s);\n} : function (s) {\n  if (s.match(/[^\\x00-\\xFF]/)) throw new RangeError('The string contains invalid characters.');\n  return fromUint8Array(Uint8Array.from(s, function (c) {\n    return c.charCodeAt(0);\n  }));\n};\n/**\n * @deprecated since 3.0.0\n * @param {string} src UTF-8 string\n * @returns {string} UTF-16 string\n */\n\n\nvar utob = function utob(src) {\n  return unescape(encodeURIComponent(src));\n};\n/**\n * converts a UTF-8-encoded string to a Base64 string\n * @param {String} src the string to convert\n * @param {Boolean} rfc4648 if `true` make the result URL-safe\n * @returns {String} Base64 string\n */\n\n\nvar encode = function encode(src, rfc4648) {\n  var b64 = _btoa(utob(src));\n\n  return rfc4648 ? _mkUriSafe(b64) : b64;\n};\n/**\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648\n * @param {String} src the string to convert\n * @returns {String} Base64 string\n */\n\n\nvar encodeURI = function encodeURI(src) {\n  return encode(src, true);\n};\n/**\n * @deprecated since 3.0.0\n * @param {string} src UTF-16 string\n * @returns {string} UTF-8 string\n */\n\n\nvar btou = function btou(src) {\n  return decodeURIComponent(escape(src));\n};\n\nvar _cb_decode = function _cb_decode(cccc) {\n  var len = cccc.length,\n      padlen = len % 4,\n      n = (len > 0 ? _b64tab[cccc.charAt(0)] << 18 : 0) | (len > 1 ? _b64tab[cccc.charAt(1)] << 12 : 0) | (len > 2 ? _b64tab[cccc.charAt(2)] << 6 : 0) | (len > 3 ? _b64tab[cccc.charAt(3)] : 0),\n      chars = [_fromCharCode(n >>> 16), _fromCharCode(n >>> 8 & 0xff), _fromCharCode(n & 0xff)];\n  chars.length -= [0, 0, 2, 1][padlen];\n  return chars.join('');\n};\n/**\n * 100% compatible with `window.atob` of web browsers\n * @param {String} src Base64-encoded string\n * @returns {String} binary string\n */\n\n\nvar _atob = typeof atob === 'function' ? function (a) {\n  return atob(a);\n} : function (a) {\n  return String(a).replace(/[^A-Za-z0-9\\+\\/]/g, '').replace(/\\S{1,4}/g, _cb_decode);\n};\n\nvar _decode = function _decode(a) {\n  return btou(_atob(a));\n};\n\nvar _fromURI = function _fromURI(a) {\n  return String(a).replace(/[-_]/g, function (m0) {\n    return m0 == '-' ? '+' : '/';\n  }).replace(/[^A-Za-z0-9\\+\\/]/g, '');\n};\n/**\n * converts a Base64 string to a UTF-8 string\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {String} UTF-8 string\n */\n\n\nvar decode = function decode(src) {\n  return _decode(_fromURI(src));\n};\n/**\n * converts a Base64 string to a Uint8Array\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {Uint8Array} UTF-8 string\n */\n\n\nvar toUint8Array = function toUint8Array(a) {\n  return Uint8Array.from(_atob(_fromURI(a)), function (c) {\n    return c.charCodeAt(0);\n  });\n};\n\nvar _noEnum = function _noEnum(v) {\n  return {\n    value: v,\n    enumerable: false,\n    writable: true,\n    configurable: true\n  };\n};\n\nvar extendString = function extendString() {\n  var _add = function _add(name, body) {\n    return Object.defineProperty(String.prototype, name, _noEnum(body));\n  };\n\n  _add('fromBase64', function () {\n    return decode(this);\n  });\n\n  _add('toBase64', function (rfc4648) {\n    return encode(this, rfc4648);\n  });\n\n  _add('toBase64URI', function () {\n    return encode(this, true);\n  });\n\n  _add('toBase64URL', function () {\n    return encode(this, true);\n  });\n\n  _add('toUint8Array', function () {\n    return toUint8Array(this);\n  });\n};\n\nvar extendUint8Array = function extendUint8Array() {\n  var _add = function _add(name, body) {\n    return Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\n  };\n\n  _add('toBase64', function (rfc4648) {\n    return fromUint8Array(this, rfc4648);\n  });\n\n  _add('toBase64URI', function () {\n    return fromUint8Array(this, true);\n  });\n\n  _add('toBase64URL', function () {\n    return fromUint8Array(this, true);\n  });\n};\n\nvar extendBuiltins = function extendBuiltins() {\n  extendString();\n  extendUint8Array();\n};\n\nvar gBase64 = {\n  VERSION: version,\n  atob: _atob,\n  btoa: _btoa,\n  fromBase64: decode,\n  toBase64: encode,\n  encode: encode,\n  encodeURI: encodeURI,\n  encodeURL: encodeURI,\n  utob: utob,\n  btou: btou,\n  decode: decode,\n  fromUint8Array: fromUint8Array,\n  toUint8Array: toUint8Array,\n  extendString: extendString,\n  extendUint8Array: extendUint8Array,\n  extendBuiltins: extendBuiltins\n}; // makecjs:CUT //\n\nexport { version as VERSION };\nexport { _atob as atob };\nexport { _btoa as btoa };\nexport { decode as fromBase64 };\nexport { encode as toBase64 };\nexport { utob };\nexport { encode };\nexport { encodeURI };\nexport { encodeURI as encodeURL };\nexport { btou };\nexport { decode };\nexport { fromUint8Array };\nexport { toUint8Array };\nexport { extendString };\nexport { extendUint8Array };\nexport { extendBuiltins }; // and finally,\n\nexport { gBase64 as Base64 };","map":{"version":3,"sources":["/Users/andrewgorman/Documents/Personal Website/site_1/node_modules/js-base64/base64.mjs"],"names":["version","_b64chars","_b64tab","bin","tab","i","c","_fromCharCode","String","fromCharCode","_mkUriSafe","src","replace","m0","fromUint8Array","urisafe","b64","l","length","a0","a1","a2","ord","charAt","_btoa","btoa","s","match","RangeError","Uint8Array","from","charCodeAt","utob","unescape","encodeURIComponent","encode","rfc4648","encodeURI","btou","decodeURIComponent","escape","_cb_decode","cccc","len","padlen","n","chars","join","_atob","atob","a","_decode","_fromURI","decode","toUint8Array","_noEnum","v","value","enumerable","writable","configurable","extendString","_add","name","body","Object","defineProperty","prototype","extendUint8Array","extendBuiltins","gBase64","VERSION","fromBase64","toBase64","encodeURL","Base64"],"mappings":"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","sourcesContent":["/**\n *  base64.mjs\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n * \n * @author Dan Kogai (https://github.com/dankogai)\n */      \nconst version = '3.2.3';\nconst _b64chars\n      = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst _b64tab = ((bin) => {\n    let tab = {}, i = 0;\n    for (const c of bin) tab[c] = i++;\n    return tab;\n})(_b64chars);\nconst _fromCharCode = String.fromCharCode;\nconst _mkUriSafe =  (src) => String(src)\n      .replace(/[+\\/]/g, (m0) => m0 == '+' ? '-' : '_')\n      .replace(/=/g, '');\n/**\n * converts a Uint8Array to a Base64 string\n * @param {Uint8Array} src\n * @param {Boolean} urisafe URL-and-filename-safe a la RFC4648\n * @returns {String} Base64 string\n */\nconst fromUint8Array = (src, urisafe) => {\n    let b64 = '';\n    for (let i = 0, l = src.length; i < l; i += 3) {\n        const a0 = src[i], a1 = src[i+1], a2 = src[i+2];\n        const ord = a0 << 16 | a1 << 8 | a2;\n        b64 +=    _b64chars.charAt( ord >>> 18)\n            +     _b64chars.charAt((ord >>> 12) & 63)\n            + ( typeof a1 != 'undefined'\n                ? _b64chars.charAt((ord >>>  6) & 63) : '=')\n            + ( typeof a2 != 'undefined'\n                ? _b64chars.charAt( ord         & 63) : '=');\n    }\n    return urisafe ? _mkUriSafe(b64) : b64;\n};\n/**\n * 100% compatible with `window.btoa` of web browsers\n * @param {String} src binary string\n * @returns {String} Base64-encoded string\n */\nconst _btoa = typeof btoa === 'function'\n      ? (s) => btoa(s)\n      : (s) => {\n          if (s.match(/[^\\x00-\\xFF]/)) throw new RangeError(\n              'The string contains invalid characters.'\n          );\n          return fromUint8Array(\n              Uint8Array.from(s,c => c.charCodeAt(0))\n          );\n      };\n/**\n * @deprecated since 3.0.0\n * @param {string} src UTF-8 string\n * @returns {string} UTF-16 string\n */\nconst utob = (src) => unescape(encodeURIComponent(src));\n/**\n * converts a UTF-8-encoded string to a Base64 string\n * @param {String} src the string to convert\n * @param {Boolean} rfc4648 if `true` make the result URL-safe\n * @returns {String} Base64 string\n */\nconst encode = (src, rfc4648) => {\n    const b64 = _btoa(utob(src));\n    return rfc4648 ? _mkUriSafe(b64) : b64;\n};\n/**\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648\n * @param {String} src the string to convert\n * @returns {String} Base64 string\n */\nconst encodeURI = (src) => encode(src, true);\n/**\n * @deprecated since 3.0.0\n * @param {string} src UTF-16 string\n * @returns {string} UTF-8 string\n */\nconst btou = (src) => decodeURIComponent(escape(src));\nconst _cb_decode = (cccc) => {\n    let len = cccc.length,\n        padlen = len % 4,\n        n =   (len > 0 ? _b64tab[cccc.charAt(0)] << 18 : 0)\n        | (len > 1 ? _b64tab[cccc.charAt(1)] << 12 : 0)\n        | (len > 2 ? _b64tab[cccc.charAt(2)] <<  6 : 0)\n        | (len > 3 ? _b64tab[cccc.charAt(3)]       : 0),\n        chars = [\n            _fromCharCode( n >>> 16),\n            _fromCharCode((n >>>  8) & 0xff),\n            _fromCharCode( n         & 0xff)\n        ];\n    chars.length -= [0, 0, 2, 1][padlen];\n    return chars.join('');\n};\n/**\n * 100% compatible with `window.atob` of web browsers\n * @param {String} src Base64-encoded string\n * @returns {String} binary string\n */\nconst _atob = typeof atob === 'function'\n      ?  (a) => atob(a)\n      :  (a) => {\n          return String(a)\n              .replace(/[^A-Za-z0-9\\+\\/]/g, '')\n              .replace(/\\S{1,4}/g, _cb_decode);\n      };\nconst _decode = (a) => btou(_atob(a));\nconst _fromURI = (a) => {\n    return String(a)\n        .replace(/[-_]/g, (m0) => m0 == '-' ? '+' : '/')\n        .replace(/[^A-Za-z0-9\\+\\/]/g, '');\n};\n/**\n * converts a Base64 string to a UTF-8 string\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {String} UTF-8 string\n */\nconst decode = (src) =>  _decode(_fromURI(src));\n/**\n * converts a Base64 string to a Uint8Array\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {Uint8Array} UTF-8 string\n */\nconst toUint8Array = (a) =>  {\n    return Uint8Array.from(_atob(_fromURI(a)), c => c.charCodeAt(0));\n};\nconst _noEnum = (v) => {\n    return {\n        value:v, enumerable:false, writable:true, configurable:true\n    };\n};\nconst extendString = function() {\n    const _add = (name, body) => Object.defineProperty(\n        String.prototype, name, _noEnum(body)\n    );\n    _add('fromBase64', function() {\n        return decode(this);\n    });\n    _add('toBase64', function(rfc4648) {\n        return encode(this, rfc4648);\n    });\n    _add('toBase64URI', function() {\n        return encode(this, true);\n    });\n    _add('toBase64URL', function() {\n        return encode(this, true);\n    });\n    _add('toUint8Array', function() {\n        return toUint8Array(this);\n    });\n};\nconst extendUint8Array = function() {\n    const _add = (name, body) => Object.defineProperty(\n        Uint8Array.prototype, name, _noEnum(body)\n    );\n    _add('toBase64', function(rfc4648) {\n        return fromUint8Array(this, rfc4648);\n    });\n    _add('toBase64URI', function() {\n        return fromUint8Array(this, true);\n    });\n    _add('toBase64URL', function() {\n        return fromUint8Array(this, true);\n    });\n};\nconst extendBuiltins = () => {\n    extendString();\n    extendUint8Array();\n}\nconst gBase64 = {\n    VERSION: version,\n    atob: _atob,\n    btoa: _btoa,\n    fromBase64: decode,\n    toBase64: encode,\n    encode: encode,\n    encodeURI: encodeURI,\n    encodeURL: encodeURI,\n    utob: utob,\n    btou: btou,\n    decode: decode,\n    fromUint8Array: fromUint8Array,\n    toUint8Array: toUint8Array,\n    extendString: extendString,\n    extendUint8Array: extendUint8Array,\n    extendBuiltins: extendBuiltins\n}\n// makecjs:CUT //\nexport {version as VERSION};\nexport {_atob as atob};\nexport {_btoa as btoa};\nexport {decode as fromBase64};\nexport {encode as toBase64};\nexport {utob};\nexport {encode};\nexport {encodeURI};\nexport {encodeURI as encodeURL};\nexport {btou};\nexport {decode};\nexport {fromUint8Array};\nexport {toUint8Array};\nexport {extendString};\nexport {extendUint8Array};\nexport {extendBuiltins};\n// and finally,\nexport {gBase64 as Base64};\n"]},"metadata":{},"sourceType":"module"}