{"ast":null,"code":"var _jsxFileName = \"/Users/andrewgorman/Documents/Personal Website/site_1/src/components/SelectedProject.js\";\nimport React, { useState, useEffect } from \"react\";\n\nconst Caption = ({\n  selected,\n  name,\n  desc\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  style: selected ? {\n    height: '101%',\n    width: '100%',\n    left: \"0px\",\n    top: \"0px\",\n    backgroundColor: 'rgba(255, 255, 255, 0.8)',\n    display: 'table',\n    position: \"absolute\",\n    zIndex: \"1\",\n    overflow: 'hidden',\n    pointerEvents: \"none\"\n  } : {\n    display: \"none\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  style: captionContent,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"h3\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 13\n  }\n}, name), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 13\n  }\n}, desc)));\n\nconst imgStyle = {\n  transition: \"transform .135s cubic-bezier(0.0,0.0,0.2,1),opacity linear .15s\"\n};\nconst selectedImgStyle = {\n  transform: \"translateZ(0px) scale3d(1.2, 1.2, 1)\",\n  transition: \"transform .135s cubic-bezier(0.0,0.0,0.2,1),opacity linear .15s\"\n};\nconst cont = {\n  backgroundColor: \"#eee\",\n  cursor: \"pointer\",\n  overflow: \"hidden\",\n  position: \"relative\"\n};\n\nconst SelectedImage = ({\n  index,\n  photo,\n  margin,\n  direction,\n  top,\n  left,\n  selected,\n  project\n}) => {\n  const [isSelected, setIsSelected] = useState(selected);\n\n  if (direction === \"column\") {\n    cont.position = \"absolute\";\n    cont.left = left;\n    cont.top = top;\n  }\n\n  const handleOnHover = e => {\n    setIsSelected(true);\n  };\n\n  const handleOffHover = e => {\n    setIsSelected(false);\n  };\n\n  useEffect(() => {\n    setIsSelected(selected);\n  }, [selected]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin,\n      height: photo.height,\n      width: photo.width,\n      ...cont\n    },\n    className: !isSelected ? \"not-selected\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Caption, {\n    name: photo.name,\n    desc: photo.desc,\n    selected: isSelected ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", Object.assign({\n    alt: photo.title,\n    style: isSelected ? { ...imgStyle,\n      ...selectedImgStyle\n    } : { ...imgStyle\n    }\n  }, photo, {\n    onMouseOver: handleOnHover,\n    onMouseLeave: handleOffHover,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  })));\n};\n\nconst captionContent = {\n  height: '100%',\n  width: '90%',\n  textAlign: 'center',\n  transform: 'translateY(50%)',\n  fontFamily: 'monospace'\n};\nexport default SelectedImage;","map":{"version":3,"sources":["/Users/andrewgorman/Documents/Personal Website/site_1/src/components/SelectedProject.js"],"names":["React","useState","useEffect","Caption","selected","name","desc","height","width","left","top","backgroundColor","display","position","zIndex","overflow","pointerEvents","captionContent","imgStyle","transition","selectedImgStyle","transform","cont","cursor","SelectedImage","index","photo","margin","direction","project","isSelected","setIsSelected","handleOnHover","e","handleOffHover","title","textAlign","fontFamily"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Caption = ({ selected, name, desc }) => (\n  <div\n    style={\n      selected\n          ? { \n              height: '101%',\n              width: '100%',\n              left: \"0px\", \n              top: \"0px\", \n              backgroundColor: 'rgba(255, 255, 255, 0.8)',\n              display: 'table',\n              position: \"absolute\", \n              zIndex: \"1\", \n              overflow: 'hidden',\n              pointerEvents: \"none\" \n      }\n        : { display: \"none\" }\n    }\n  >\n        <div style={captionContent}>\n            <h3>{name}</h3>\n            <p>{desc}</p>\n        </div>\n  </div>\n);\n\nconst imgStyle = {\n  transition: \"transform .135s cubic-bezier(0.0,0.0,0.2,1),opacity linear .15s\"\n};\nconst selectedImgStyle = {\n  transform: \"translateZ(0px) scale3d(1.2, 1.2, 1)\",\n  transition: \"transform .135s cubic-bezier(0.0,0.0,0.2,1),opacity linear .15s\"\n};\nconst cont = {\n  backgroundColor: \"#eee\",\n  cursor: \"pointer\",\n  overflow: \"hidden\",\n  position: \"relative\"\n};\n\nconst SelectedImage = ({\n  index,\n  photo,\n  margin,\n  direction,\n  top,\n  left,\n  selected,\n  project\n}) => {\n  const [isSelected, setIsSelected] = useState(selected);\n  if (direction === \"column\") {\n    cont.position = \"absolute\";\n    cont.left = left;\n    cont.top = top;\n  }\n\n  const handleOnHover = e => {\n    setIsSelected(true);\n};\n\n  const handleOffHover = e => {\n    setIsSelected(false);\n  };\n\n  useEffect(() => {\n    setIsSelected(selected);\n  }, [selected]);\n  return (\n    <div\n      style={{ margin, height: photo.height, width: photo.width, ...cont }}\n      className={!isSelected ? \"not-selected\" : \"\"}\n    >\n      <Caption name={photo.name} desc={photo.desc} selected={isSelected ? true : false} />\n      <img\n        alt={photo.title}\n        style={\n          isSelected ? { ...imgStyle, ...selectedImgStyle } : { ...imgStyle }\n        }\n        {...photo}\n        onMouseOver={handleOnHover}\n        onMouseLeave={handleOffHover}\n      />\n    </div>\n  );\n}\n\nconst captionContent = {\n    height: '100%',\n    width: '90%',\n    textAlign: 'center',\n    transform: 'translateY(50%)',\n    fontFamily: 'monospace'\n}\n\nexport default SelectedImage;\n\n"]},"metadata":{},"sourceType":"module"}