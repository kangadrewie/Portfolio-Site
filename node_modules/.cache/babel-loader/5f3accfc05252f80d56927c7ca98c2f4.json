{"ast":null,"code":"var _jsxFileName = \"/Users/andrewgorman/Documents/Personal Website/site_1/src/components/gitexplorer/CodeBrowser.js\";\nimport React, { Component } from 'react';\nimport CodeBlock from './CodeBlocks.js';\nimport FileExplorer from './FileExplorer.js';\nimport { Base64 } from 'js-base64';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.viewCodeContent = base64 => {\n      try {\n        let fileContent = Base64.decode(base64);\n        console.log(fileContent);\n        this.setState({\n          hasError: false,\n          codeContent: fileContent\n        });\n      } catch (error) {\n        this.setState({\n          hasError: true\n        });\n        console.log('INVALID FILE TYPE');\n      }\n    };\n\n    this.retrieveFileInformation = (repoName, branchID) => {\n      fetch(`https://api.github.com/repos/kangadrewie/${repoName}/git/blobs/${branchID}`).then(response => {\n        return response.json();\n      }).then(data => {\n        return this.viewCodeContent(data.content);\n      });\n    };\n\n    this.fileAction = obj => {\n      if (obj.action.type == 'blobs') {\n        this.retrieveFileInformation(this.props.selectedProject.gitRepo, obj.action.branchID);\n      }\n    };\n\n    this.state = {\n      codeContent: ' ',\n      hasError: false\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.selectedProject !== this.props.selectedProject) {\n      this.setState({\n        codeContent: ''\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FileExplorer, {\n      fileAction: this.fileAction,\n      selectedProject: this.props.selectedProject,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CodeBlock, {\n      code: this.state.codeContent,\n      error: this.state.hasError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst container = {\n  position: 'relative'\n};\nexport default App;","map":{"version":3,"sources":["/Users/andrewgorman/Documents/Personal Website/site_1/src/components/gitexplorer/CodeBrowser.js"],"names":["React","Component","CodeBlock","FileExplorer","Base64","App","constructor","props","viewCodeContent","base64","fileContent","decode","console","log","setState","hasError","codeContent","error","retrieveFileInformation","repoName","branchID","fetch","then","response","json","data","content","fileAction","obj","action","type","selectedProject","gitRepo","state","componentDidUpdate","prevProps","render","container","position"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AACxBK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,eATmB,GASAC,MAAD,IAAY;AAC1B,UAAI;AACA,YAAIC,WAAW,GAAGN,MAAM,CAACO,MAAP,CAAcF,MAAd,CAAlB;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACA,aAAKI,QAAL,CAAc;AAACC,UAAAA,QAAQ,EAAE,KAAX;AAAkBC,UAAAA,WAAW,EAAGN;AAAhC,SAAd;AACH,OAJD,CAIE,OAAMO,KAAN,EAAa;AACX,aAAKH,QAAL,CAAc;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAAd;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;AACJ,KAlBkB;;AAAA,SAoBnBK,uBApBmB,GAoBO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC9CC,MAAAA,KAAK,CAAE,4CAA2CF,QAAS,cAAaC,QAAS,EAA5E,CAAL,CACKE,IADL,CACWC,QAAD,IAAc;AAChB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,OAHL,EAIKF,IAJL,CAIWG,IAAD,IAAU;AACZ,eAAO,KAAKjB,eAAL,CAAqBiB,IAAI,CAACC,OAA1B,CAAP;AACH,OANL;AAOH,KA5BkB;;AAAA,SA8BnBC,UA9BmB,GA8BLC,GAAD,IAAS;AAClB,UAAIA,GAAG,CAACC,MAAJ,CAAWC,IAAX,IAAmB,OAAvB,EAAgC;AAC5B,aAAKZ,uBAAL,CAA6B,KAAKX,KAAL,CAAWwB,eAAX,CAA2BC,OAAxD,EAAiEJ,GAAG,CAACC,MAAJ,CAAWT,QAA5E;AACH;AACJ,KAlCkB;;AAGf,SAAKa,KAAL,GAAa;AACTjB,MAAAA,WAAW,EAAG,GADL;AAETD,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIH;;AA6BDmB,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,QAAIA,SAAS,CAACJ,eAAV,KAA8B,KAAKxB,KAAL,CAAWwB,eAA7C,EAA8D;AAC1D,WAAKjB,QAAL,CAAc;AAACE,QAAAA,WAAW,EAAE;AAAd,OAAd;AACH;AACJ;;AAEDoB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,KAAK,EAAEC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAc,MAAA,UAAU,EAAE,KAAKV,UAA/B;AAA2C,MAAA,eAAe,EAAE,KAAKpB,KAAL,CAAWwB,eAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAE,KAAKE,KAAL,CAAWjB,WAA5B;AAAyC,MAAA,KAAK,EAAE,KAAKiB,KAAL,CAAWlB,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAlDuB;;AAqD5B,MAAMsB,SAAS,GAAG;AACdC,EAAAA,QAAQ,EAAE;AADI,CAAlB;AAIA,eAAejC,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport CodeBlock from './CodeBlocks.js';\nimport FileExplorer from './FileExplorer.js';\nimport { Base64 } from 'js-base64';\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            codeContent : ' ',\n            hasError: false\n        }\n    }\n\n    viewCodeContent = (base64) => {\n        try {\n            let fileContent = Base64.decode(base64)\n            console.log(fileContent)\n            this.setState({hasError: false, codeContent : fileContent});\n        } catch(error) {\n            this.setState({hasError: true})\n            console.log('INVALID FILE TYPE')\n        }\n    }\n\n    retrieveFileInformation = (repoName, branchID) => {\n        fetch(`https://api.github.com/repos/kangadrewie/${repoName}/git/blobs/${branchID}`)\n            .then((response) => {\n                return response.json()\n            })\n            .then((data) => {\n                return this.viewCodeContent(data.content)\n            })\n    }\n\n    fileAction = (obj) => {\n        if (obj.action.type == 'blobs') {\n            this.retrieveFileInformation(this.props.selectedProject.gitRepo, obj.action.branchID)\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.selectedProject !== this.props.selectedProject) {\n            this.setState({codeContent: ''})\n        }\n    }\n\n    render() {\n        return(\n            <div style={container}>\n                <FileExplorer fileAction={this.fileAction} selectedProject={this.props.selectedProject}></FileExplorer>\n                <CodeBlock code={this.state.codeContent} error={this.state.hasError}></CodeBlock>\n            </div>\n        );\n    }\n}\n\nconst container = {\n    position: 'relative'\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}