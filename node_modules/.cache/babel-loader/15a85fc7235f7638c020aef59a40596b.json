{"ast":null,"code":"var _jsxFileName = \"/Users/andrewgorman/Documents/Personal Website/site_2/src/components/SearchBar.js\";\nimport React, { Component } from 'react';\nimport Typewriter from 'typewriter-effect';\nimport ReactTypingEffect from 'react-typing-effect';\nlet increment = 0;\nlet len = 0;\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.postAPI = payload => {\n      const headers = {\n        method: 'GET',\n        headers: {\n          \"Authorization\": `Bearer ${process.env.REACT_APP_WIT_API_KEY}`\n        }\n      };\n      fetch(`https://api.wit.ai/message?v=20200513&q=${payload}`, headers).then(response => {\n        return response.json();\n      }).then(data => {\n        return data.intents[0];\n      }).then(intent => {\n        try {\n          this.props.intent(intent);\n        } catch (err) {\n          this.props.intent({\n            name: 'unknown'\n          });\n        }\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let payload = encodeURIComponent(e.target[0].value);\n      this.postAPI(payload);\n      console.log(this.terminal.current.id);\n      this.setState({\n        rows: [...this.state.rows, '0']\n      });\n      this.setState({\n        searchWidth: '20px'\n      });\n      let increment = 20;\n    };\n\n    this.updateType = event => {\n      console.log(event.target.value);\n      this.setState({\n        type: event.target.value\n      });\n    };\n\n    this.terminal = React.createRef();\n    this.state = {\n      nextLine: false,\n      startType: false,\n      rows: [],\n      intent: 'null',\n      firstName: 'andrew',\n      searchWidth: '20px',\n      type: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui items terminal\",\n      style: terminal,\n      intent: this.state.intent,\n      ref: this.terminal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: terminalLeft,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"big angle right icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: terminalMiddle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typewriter, {\n      options: {\n        cursor: '_'\n      },\n      onInit: typewriter => {\n        typewriter.typeString('Ask Me Anything, or simple say Hi!').callFunction(() => {\n          this.setState({\n            rows: [...this.state.rows, '0']\n          });\n        }).pauseFor(2500).deleteAll();\n        typewriter.typeString('favourite programming language?').pauseFor(1500).deleteAll();\n        typewriter.typeString('how do I contact you?').pauseFor(1500).deleteAll().callFunction(() => {\n          console.log('All strings were deleted');\n        });\n        typewriter.typeString('Ask Me Anything, or simple say Hi!').start();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }))), this.state.rows.map((row, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: terminalLeft,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"big angle right icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        style: terminalMiddle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        method: \"post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.updateType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(ReactTypingEffect, {\n        style: typewriterStyle,\n        staticText: this.state.type,\n        speed: 250,\n        typingDelay: 250,\n        cursor: \"_\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 45\n        }\n      }))));\n    }));\n  }\n\n}\n\n;\nconst terminal = {\n  transform: 'translateX(-10px)',\n  maxWidth: '500px'\n};\nconst typewriterStyle = {\n  fontFamily: 'monospace',\n  fontSize: '1.5em'\n};\nconst inputBox = {\n  width: '20px',\n  fontFamily: 'monospace',\n  fontSize: '1.5em',\n  whiteSpace: 'no-wrap'\n};\nconst terminalRow = {\n  textAlign: 'left',\n  width: '100%'\n};\nconst terminalLeft = {\n  color: 'orange',\n  float: 'left',\n  textAlign: 'left',\n  width: '25px',\n  marginRight: '10px'\n};\nconst terminalMiddle = {\n  float: 'left',\n  paddingTop: '3px',\n  width: 'auto'\n};\nconst terminalRight = {\n  float: 'left',\n  width: '25px'\n};\nconst botRows = {\n  width: '502px !important',\n  minWidth: '502px !important'\n};\nconst container = {\n  marginTop: '40px',\n  transform: 'translateX(-12px)'\n};\nconst tableStyle = {};\nconst searchBar = {\n  width: '500px',\n  borderRight: 'none',\n  marginRight: '5px',\n  padding: '0px',\n  height: '100%',\n  border: '0px solid rgba(0, 0, 0, 0.27)',\n  backgroundColor: 'white',\n  color: 'white',\n  outline: 'none',\n  color: 'rgba(0, 0, 0, 0.87)',\n  borderRadius: '5px 5px 5px 5px',\n  mozTransition: 'all 0.3s',\n  transition: 'all 0.3s',\n  caretColor: 'transparent',\n  fontFamily: 'monospace',\n  fontSize: '1.5em'\n};\nconst searchButton = {\n  visibility: 'hidden',\n  width: '10px',\n  height: '10px',\n  border: '0px solid rgba(0, 0, 0, 0.27)',\n  textAlign: 'center',\n  borderRadius: '5px 5px 5px 5px',\n  cursor: 'pointer',\n  fontSize: '25px',\n  marginLeft: '7px',\n  backgroundColor: 'orange',\n  color: 'white'\n};\nexport default SearchBar;","map":{"version":3,"sources":["/Users/andrewgorman/Documents/Personal Website/site_2/src/components/SearchBar.js"],"names":["React","Component","Typewriter","ReactTypingEffect","increment","len","SearchBar","constructor","props","postAPI","payload","headers","method","process","env","REACT_APP_WIT_API_KEY","fetch","then","response","json","data","intents","intent","err","name","handleSubmit","e","preventDefault","encodeURIComponent","target","value","console","log","terminal","current","id","setState","rows","state","searchWidth","updateType","event","type","createRef","nextLine","startType","firstName","render","terminalLeft","terminalMiddle","cursor","typewriter","typeString","callFunction","pauseFor","deleteAll","start","map","row","index","typewriterStyle","transform","maxWidth","fontFamily","fontSize","inputBox","width","whiteSpace","terminalRow","textAlign","color","float","marginRight","paddingTop","terminalRight","botRows","minWidth","container","marginTop","tableStyle","searchBar","borderRight","padding","height","border","backgroundColor","outline","borderRadius","mozTransition","transition","caretColor","searchButton","visibility","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Typewriter from 'typewriter-effect';\nimport ReactTypingEffect from 'react-typing-effect';\n\n\nlet increment = 0;\nlet len = 0;\n\nclass SearchBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.terminal = React.createRef();\n\n        this.state = {\n            nextLine: false,\n            startType: false,\n            rows: [],\n            intent: 'null',\n            firstName: 'andrew',\n            searchWidth: '20px',\n            type: ''\n        }\n    }\n\n    postAPI = (payload) => {\n        const headers = {\n            method: 'GET',\n            headers: {\n                \"Authorization\": `Bearer ${process.env.REACT_APP_WIT_API_KEY}`,\n            },\n        }\n\n        fetch(`https://api.wit.ai/message?v=20200513&q=${payload}`,  headers)\n            .then(response => {\n                return response.json()\n            })\n            .then((data) => {\n                return data.intents[0]\n            })\n            .then((intent) => {\n                try {\n                    this.props.intent(intent);\n                } catch(err) {\n                    this.props.intent({name: 'unknown'})\n                }\n            });\n            \n    }\n\n    handleSubmit= (e) => {\n        e.preventDefault() \n        let payload = encodeURIComponent(e.target[0].value);\n        this.postAPI(payload)\n        \n        console.log(this.terminal.current.id)\n        this.setState({ rows: [...this.state.rows, '0'] })\n        this.setState({searchWidth: '20px'})\n        let increment = 20;\n    } \n\n    updateType = (event) => {\n        console.log(event.target.value)\n        this.setState({type: event.target.value}); \n    }\n\n    render() {\n        return(\n            <div className=\"ui items terminal\" style={terminal} intent={this.state.intent} ref={this.terminal}>\n                <div className=\"item\">\n                    <div style={terminalLeft}>\n                        <i className=\"big angle right icon\"></i>\n                    </div>\n                    <div style={terminalMiddle}>\n                        <Typewriter\n                          options={{\n                              cursor: '_',\n                          }}\n                          onInit={(typewriter) => {\n                            typewriter.typeString('Ask Me Anything, or simple say Hi!')\n                              .callFunction(() => {\n                                this.setState({ rows: [...this.state.rows, '0'] })\n                              })\n                              .pauseFor(2500)\n                              .deleteAll()\n                            typewriter.typeString('favourite programming language?')\n                              .pauseFor(1500)\n                              .deleteAll()\n                            typewriter.typeString('how do I contact you?')\n                              .pauseFor(1500)\n                              .deleteAll()\n                              .callFunction(() => {\n                                console.log('All strings were deleted');\n                              })\n                            typewriter.typeString('Ask Me Anything, or simple say Hi!')\n                              .start();\n                          }}\n                        />\n                    </div>\n                </div>\n                {\n                    this.state.rows.map((row, index) => {\n                        return(\n                            <div className=\"item\">\n                                <div style={terminalLeft}>\n                                    <i className=\"big angle right icon\"></i>\n                                </div>\n                                <div style={terminalMiddle}>\n                                    <form onSubmit={this.handleSubmit} method=\"post\">\n                                        <input type=\"text\" onChange={this.updateType} />\n                                            <ReactTypingEffect\n                                                style={typewriterStyle}\n                                                staticText={this.state.type}\n                                                speed={250}\n                                                typingDelay={250}\n                                                cursor=\"_\"\n                                            />\n                                    </form>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        )\n    }\n};\n\nconst terminal = {\n    transform: 'translateX(-10px)',\n    maxWidth: '500px',\n}\n\nconst typewriterStyle = {\n    fontFamily: 'monospace',\n    fontSize: '1.5em',\n\n}\n\nconst inputBox = {\n    width: '20px',\n    fontFamily: 'monospace',\n    fontSize: '1.5em',\n    whiteSpace: 'no-wrap'\n}\n\nconst terminalRow = {\n    textAlign: 'left',\n    width: '100%'\n}\n\nconst terminalLeft = {\n    color: 'orange',\n    float: 'left',\n    textAlign: 'left',\n    width: '25px',\n    marginRight: '10px'\n}\n\nconst terminalMiddle = {\n    float: 'left',\n    paddingTop: '3px',\n    width: 'auto'\n}\n\nconst terminalRight = {\n    float: 'left',\n    width: '25px'\n}\n\nconst botRows = {\n    width: '502px !important',\n    minWidth: '502px !important'\n}\n\nconst container = {\n    marginTop: '40px',\n    transform: 'translateX(-12px)'\n}\n\nconst tableStyle = {\n}\n\nconst searchBar = {\n\twidth: '500px',\n\tborderRight: 'none',\n\tmarginRight: '5px',\n\tpadding: '0px',\n\theight: '100%',\n\tborder: '0px solid rgba(0, 0, 0, 0.27)',\n\tbackgroundColor: 'white',\n\tcolor: 'white',\n\toutline: 'none',\n\tcolor: 'rgba(0, 0, 0, 0.87)',\n\tborderRadius: '5px 5px 5px 5px',\n    mozTransition: 'all 0.3s',\n\ttransition: 'all 0.3s',\n    caretColor: 'transparent',\n    fontFamily: 'monospace',\n    fontSize: '1.5em',\n}\n\nconst searchButton = {\n    visibility: 'hidden',\n\twidth: '10px',\n    height: '10px',\n\tborder: '0px solid rgba(0, 0, 0, 0.27)',\n\ttextAlign: 'center',\n\tborderRadius: '5px 5px 5px 5px',\n\tcursor: 'pointer',\n\tfontSize: '25px',\n\tmarginLeft: '7px',\n\n\tbackgroundColor: 'orange',\n\tcolor: 'white'\n}\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}