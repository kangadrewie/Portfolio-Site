{"ast":null,"code":"var _jsxFileName = \"/Users/andrewgorman/Documents/Personal Website/site_2/src/components/SearchBar.js\";\nimport React, { Component } from 'react';\nimport Typewriter from 'typewriter-effect';\nimport ReactTypingEffect from 'react-typing-effect';\nlet increment = 0;\nlet len = 0;\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.scrollToBottom = () => {\n      this.messagesEnd.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    };\n\n    this.postAPI = payload => {\n      const headers = {\n        method: 'GET',\n        headers: {\n          \"Authorization\": `Bearer ${process.env.REACT_APP_WIT_API_KEY}`\n        }\n      };\n      fetch(`https://api.wit.ai/message?v=20200513&q=${payload}`, headers).then(response => {\n        return response.json();\n      }).then(data => {\n        return data.intents[0];\n      }).then(intent => {\n        try {\n          this.props.intent(intent);\n        } catch (err) {\n          this.props.intent({\n            name: 'unknown'\n          });\n        }\n      });\n    };\n\n    this.clear = event => {\n      event.target.value = \"\";\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      let payload = encodeURIComponent(event.target[0].value);\n      let counter = 0;\n      this.postAPI(payload);\n      let row = 'row' + (parseInt(event.target.id) + 1).toString();\n      this.setState({\n        type: { ...this.state.type,\n          [row]: ''\n        }\n      });\n      this.setState({\n        activeID: row\n      });\n      console.log(this.state.activeID);\n    };\n\n    this.updateType = event => {\n      let row = event.currentTarget.id;\n      this.setState({\n        type: { ...this.state.type,\n          [event.currentTarget.id]: event.target.value\n        }\n      });\n    };\n\n    this.terminal = React.createRef();\n    this.inputText = React.createRef();\n    this.state = {\n      nextLine: false,\n      startType: false,\n      rows: [],\n      intent: 'null',\n      firstName: 'andrew',\n      searchWidth: '20px',\n      activeID: 'row0',\n      terminalHeading: true,\n      rowOffset: 0,\n      type: {}\n    };\n  }\n\n  componentDidMount() {\n    this.scrollToBottom();\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"terminal\",\n      style: terminal,\n      intent: this.state.intent,\n      ref: this.terminal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.terminalHeading ? \"ui items\" : \"ui items hide\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: terminalLeft,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"big angle right icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: terminalMiddle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typewriter, {\n      options: {\n        cursor: '_'\n      },\n      onInit: typewriter => {\n        typewriter.typeString('Ask Me Anything, or simply say Hi!').callFunction(() => {\n          this.setState({\n            type: { ...this.state.type,\n              row0: ''\n            }\n          });\n        }).pauseFor(2500).deleteAll();\n        typewriter.typeString('favourite programming language?').pauseFor(1500).deleteAll();\n        typewriter.typeString('how do I contact you?').pauseFor(1500).deleteAll().callFunction(() => {\n          console.log('All strings were deleted');\n        });\n        typewriter.typeString('Ask Me Anything, or simply say Hi!').start();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui items\",\n      style: messageBox,\n      id: \"messageBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, Object.keys(this.state.type).map((rows, index) => {\n      let row = 'row' + (index + this.state.rowOffset);\n      let lastItem = Object.keys(this.state.type)[Object.keys(this.state.type).length - 1];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"item\",\n        style: rowItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: terminalLeft,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"big angle right icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        style: terminalMiddle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        id: index,\n        onSubmit: this.handleSubmit,\n        method: \"post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        id: 'row' + (index + this.state.rowOffset),\n        type: \"text\",\n        onChange: this.updateType,\n        autoFocus: true,\n        onFocus: this.updateType,\n        style: inputBox,\n        maxlength: \"80\",\n        required: \"required\",\n        onClick: this.clear,\n        disabled: this.state.activeID == lastItem ? \"\" : \"disabled\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(ReactTypingEffect, {\n        style: typewriterStyle,\n        staticText: this.state.type[row],\n        speed: 250,\n        typingDelay: 250,\n        cursor: this.state.activeID == row ? '_' : ' ',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 45\n        }\n      }))));\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: \"left\",\n        clear: \"both\"\n      },\n      ref: el => {\n        this.messagesEnd = el;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\n;\nconst messageBox = {\n  width: '500px',\n  height: '150px',\n  overflowY: 'auto'\n};\nconst rowItem = {\n  width: '100%'\n};\nconst terminal = {\n  transform: 'translateX(-10px)',\n  maxWidth: '500px'\n};\nconst typewriterStyle = {\n  fontFamily: 'monospace',\n  fontSize: '1.5em'\n};\nconst inputBox = {\n  position: 'absolute',\n  caretColor: 'transparent',\n  backgroundColor: 'transparent',\n  color: 'transparent',\n  fontColor: 'transparent',\n  border: '0px',\n  outline: 'none',\n  transform: 'translateY(-5px)',\n  width: '350px',\n  height: '30px',\n  whiteSpace: 'no-wrap',\n  zIndex: '99'\n};\nconst terminalRow = {\n  textAlign: 'left',\n  width: '100%'\n};\nconst terminalLeft = {\n  color: 'orange',\n  float: 'left',\n  textAlign: 'left',\n  width: '25px',\n  marginRight: '10px'\n};\nconst terminalMiddle = {\n  float: 'left',\n  paddingTop: '3px',\n  width: 'auto'\n};\nconst terminalRight = {\n  float: 'left',\n  width: '25px'\n};\nconst botRows = {\n  width: '502px !important',\n  minWidth: '502px !important'\n};\nconst container = {\n  marginTop: '40px',\n  transform: 'translateX(-12px)'\n};\nconst tableStyle = {};\nconst searchBar = {\n  width: '500px',\n  borderRight: 'none',\n  marginRight: '5px',\n  padding: '0px',\n  height: '100%',\n  border: '0px solid rgba(0, 0, 0, 0.27)',\n  backgroundColor: 'white',\n  color: 'white',\n  outline: 'none',\n  color: 'rgba(0, 0, 0, 0.87)',\n  borderRadius: '5px 5px 5px 5px',\n  mozTransition: 'all 0.3s',\n  transition: 'all 0.3s',\n  caretColor: 'transparent',\n  fontFamily: 'monospace',\n  fontSize: '1.5em'\n};\nconst searchButton = {\n  visibility: 'hidden',\n  width: '10px',\n  height: '10px',\n  border: '0px solid rgba(0, 0, 0, 0.27)',\n  textAlign: 'center',\n  borderRadius: '5px 5px 5px 5px',\n  cursor: 'pointer',\n  fontSize: '25px',\n  marginLeft: '7px',\n  backgroundColor: 'orange',\n  color: 'white'\n};\nexport default SearchBar;","map":{"version":3,"sources":["/Users/andrewgorman/Documents/Personal Website/site_2/src/components/SearchBar.js"],"names":["React","Component","Typewriter","ReactTypingEffect","increment","len","SearchBar","constructor","props","scrollToBottom","messagesEnd","scrollIntoView","behavior","postAPI","payload","headers","method","process","env","REACT_APP_WIT_API_KEY","fetch","then","response","json","data","intents","intent","err","name","clear","event","target","value","handleSubmit","preventDefault","encodeURIComponent","counter","row","parseInt","id","toString","setState","type","state","activeID","console","log","updateType","currentTarget","terminal","createRef","inputText","nextLine","startType","rows","firstName","searchWidth","terminalHeading","rowOffset","componentDidMount","componentDidUpdate","render","terminalLeft","terminalMiddle","cursor","typewriter","typeString","callFunction","row0","pauseFor","deleteAll","start","messageBox","Object","keys","map","index","lastItem","length","rowItem","inputBox","typewriterStyle","float","el","width","height","overflowY","transform","maxWidth","fontFamily","fontSize","position","caretColor","backgroundColor","color","fontColor","border","outline","whiteSpace","zIndex","terminalRow","textAlign","marginRight","paddingTop","terminalRight","botRows","minWidth","container","marginTop","tableStyle","searchBar","borderRight","padding","borderRadius","mozTransition","transition","searchButton","visibility","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Typewriter from 'typewriter-effect';\nimport ReactTypingEffect from 'react-typing-effect';\n\n\nlet increment = 0;\nlet len = 0;\n\nclass SearchBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.terminal = React.createRef();\n        this.inputText = React.createRef();\n\n        this.state = {\n            nextLine: false,\n            startType: false,\n            rows: [],\n            intent: 'null',\n            firstName: 'andrew',\n            searchWidth: '20px',\n            activeID: 'row0',\n            terminalHeading: true,\n            rowOffset: 0,\n            type: {}\n        }\n    }\n\n    scrollToBottom = () => {\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n    }\n\n    componentDidMount() {\n        this.scrollToBottom();\n    }\n\n    componentDidUpdate() {\n        this.scrollToBottom();\n    }\n\n    postAPI = (payload) => {\n        const headers = {\n            method: 'GET',\n            headers: {\n                \"Authorization\": `Bearer ${process.env.REACT_APP_WIT_API_KEY}`,\n            },\n        }\n\n        fetch(`https://api.wit.ai/message?v=20200513&q=${payload}`,  headers)\n            .then(response => {\n                return response.json()\n            })\n            .then((data) => {\n                return data.intents[0]\n            })\n            .then((intent) => {\n                try {\n                    this.props.intent(intent);\n                } catch(err) {\n                    this.props.intent({name: 'unknown'})\n                }\n            });\n            \n    }\n\n    clear = (event) => {\n        event.target.value = \"\";\n    }\n\n    handleSubmit= (event) => {\n        event.preventDefault() \n        let payload = encodeURIComponent(event.target[0].value);\n        let counter = 0\n        this.postAPI(payload)\n        let row = 'row' + (parseInt(event.target.id) + 1).toString()\n        this.setState({type: { ...this.state.type, [row]: ''}})\n        this.setState({activeID: row})\n        console.log(this.state.activeID)\n    } \n\n    updateType = (event) => {\n        let row = event.currentTarget.id\n        this.setState({ type: { ...this.state.type, [event.currentTarget.id]: event.target.value} });\n    }\n\n    render() {\n        return(\n            <div className=\"terminal\" style={terminal} intent={this.state.intent} ref={this.terminal}>\n                <div className={this.state.terminalHeading ? \"ui items\" : \"ui items hide\"}>\n                    <div className=\"item\">\n                        <div style={terminalLeft}>\n                            <i className=\"big angle right icon\"></i>\n                        </div>\n                        <div style={terminalMiddle}>\n                            <Typewriter\n                              options={{\n                                  cursor: '_',\n                              }}\n                              onInit={(typewriter) => {\n                                typewriter.typeString('Ask Me Anything, or simply say Hi!')\n                                  .callFunction(() => {\n                                      this.setState({type: { ...this.state.type, row0: ''}})\n                                  })\n                                  .pauseFor(2500)\n                                  .deleteAll()\n                                typewriter.typeString('favourite programming language?')\n                                  .pauseFor(1500)\n                                  .deleteAll()\n                                typewriter.typeString('how do I contact you?')\n                                  .pauseFor(1500)\n                                  .deleteAll()\n                                  .callFunction(() => {\n                                    console.log('All strings were deleted');\n                                  })\n                                typewriter.typeString('Ask Me Anything, or simply say Hi!')\n                                  .start();\n                              }}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"ui items\" style={messageBox} id=\"messageBox\">\n                { \n                    Object.keys(this.state.type).map((rows, index) => {\n                        let row = 'row' + (index + this.state.rowOffset)\n                        let lastItem = Object.keys(this.state.type)[Object.keys(this.state.type).length - 1]\n                        return(\n                            <div className=\"item\" style={rowItem}>\n                                <div style={terminalLeft}>\n                                    <i className=\"big angle right icon\"></i>\n                                </div>\n                                <div style={terminalMiddle}>\n                                    <form id={index} onSubmit={this.handleSubmit} method=\"post\">\n                                        <input id={'row' + (index + this.state.rowOffset)} type=\"text\" onChange={this.updateType} autoFocus onFocus={this.updateType} style={inputBox} maxlength=\"80\" required=\"required\" onClick={this.clear} disabled={(this.state.activeID == lastItem) ? \"\" : \"disabled\"}></input>\n                                            <ReactTypingEffect\n                                                style={typewriterStyle}\n                                                staticText={this.state.type[row]}\n                                                speed={250}\n                                                typingDelay={250}\n                                                cursor={(this.state.activeID == row) ? '_' : ' '}\n                                            />\n                                    </form>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n                <div style={{ float:\"left\", clear: \"both\" }} ref={(el) => { this.messagesEnd = el; }}></div>\n                </div>\n            </div>\n        )\n    }\n};\n\nconst messageBox = {\n    width: '500px',\n    height: '150px',\n    overflowY: 'auto'\n}\n\nconst rowItem = {\n    width: '100%'\n}\n\nconst terminal = {\n    transform: 'translateX(-10px)',\n    maxWidth: '500px',\n}\n\nconst typewriterStyle = {\n    fontFamily: 'monospace',\n    fontSize: '1.5em',\n\n}\n\nconst inputBox = {\n    position: 'absolute',\n    caretColor: 'transparent',\n    backgroundColor: 'transparent',\n    color: 'transparent',\n    fontColor: 'transparent',\n    border: '0px',\n    outline: 'none',\n    transform: 'translateY(-5px)',\n    width: '350px',\n    height: '30px',\n    whiteSpace: 'no-wrap',\n    zIndex: '99'\n}\n\nconst terminalRow = {\n    textAlign: 'left',\n    width: '100%'\n}\n\nconst terminalLeft = {\n    color: 'orange',\n    float: 'left',\n    textAlign: 'left',\n    width: '25px',\n    marginRight: '10px'\n}\n\nconst terminalMiddle = {\n    float: 'left',\n    paddingTop: '3px',\n    width: 'auto'\n}\n\nconst terminalRight = {\n    float: 'left',\n    width: '25px'\n}\n\nconst botRows = {\n    width: '502px !important',\n    minWidth: '502px !important'\n}\n\nconst container = {\n    marginTop: '40px',\n    transform: 'translateX(-12px)'\n}\n\nconst tableStyle = {\n}\n\nconst searchBar = {\n\twidth: '500px',\n\tborderRight: 'none',\n\tmarginRight: '5px',\n\tpadding: '0px',\n\theight: '100%',\n\tborder: '0px solid rgba(0, 0, 0, 0.27)',\n\tbackgroundColor: 'white',\n\tcolor: 'white',\n\toutline: 'none',\n\tcolor: 'rgba(0, 0, 0, 0.87)',\n\tborderRadius: '5px 5px 5px 5px',\n    mozTransition: 'all 0.3s',\n\ttransition: 'all 0.3s',\n    caretColor: 'transparent',\n    fontFamily: 'monospace',\n    fontSize: '1.5em',\n}\n\nconst searchButton = {\n    visibility: 'hidden',\n\twidth: '10px',\n    height: '10px',\n\tborder: '0px solid rgba(0, 0, 0, 0.27)',\n\ttextAlign: 'center',\n\tborderRadius: '5px 5px 5px 5px',\n\tcursor: 'pointer',\n\tfontSize: '25px',\n\tmarginLeft: '7px',\n\n\tbackgroundColor: 'orange',\n\tcolor: 'white'\n}\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}